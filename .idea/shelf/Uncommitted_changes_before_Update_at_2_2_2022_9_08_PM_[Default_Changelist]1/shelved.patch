Index: scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/dataentry/TeleOpFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.usfirst.frc.team25.scouting.ui.dataentry;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Fragment;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\n\r\nimport org.usfirst.frc.team25.scouting.R;\r\nimport org.usfirst.frc.team25.scouting.data.models.ScoutEntry;\r\nimport org.usfirst.frc.team25.scouting.data.models.TeleOp;\r\nimport org.usfirst.frc.team25.scouting.ui.UiHelper;\r\nimport org.usfirst.frc.team25.scouting.ui.views.ButtonIncDecSet;\r\nimport org.usfirst.frc.team25.scouting.ui.views.ButtonIncDecView;\r\n\r\nimport java.util.Arrays;\r\n\r\nimport static org.usfirst.frc.team25.scouting.ui.UiHelper.hideKeyboard;\r\n\r\n\r\npublic class TeleOpFragment extends Fragment implements EntryFragment {\r\n\r\n    private ScoutEntry entry;\r\n    /*private RadioButton[] attemptHabClimbLevel, successRungClimbLevel, highestAssistedClimbLevel,\r\n            climbAssistStartingLevel;*/\r\n    private RadioButton[] successRungClimbLevel;\r\n    private RadioGroup successRungClimbLevelGroup;\r\n\r\n    /*private RadioGroup attemptHabClimbLevelGroup, successRungClimbLevelGroup,\r\n            highestAssistedClimbLevelGroup, climbAssistStartingLevelGroup;\r\n    private ButtonIncDecSet cargoShipHatches, cargoShipCargo, rocketLevelOneHatches,\r\n            rocketLevelOneCargo, rocketLevelTwoHatches, rocketLevelTwoCargo,\r\n            rocketLevelThreeHatches, rocketLevelThreeCargo;*/\r\n    private CheckBox attemptRungClimb, successRungClimb;\r\n    private ButtonIncDecView HumanCargoScored, RobotCargoScoredUpperHub, RobotCargoPickedUp,\r\n            RobotCargoScoredLowerHub, RobotCargoDropped , HumanCargoMissed;\r\n    //private CheckBox climbAssistedByPartners;\r\n    //private EditText assistingClimbTeamNum;\r\n\r\n\r\n    public static TeleOpFragment getInstance(ScoutEntry entry) {\r\n        TeleOpFragment tof = new TeleOpFragment();\r\n        tof.setEntry(entry);\r\n        return tof;\r\n    }\r\n\r\n    @Override\r\n    public ScoutEntry getEntry() {\r\n        return entry;\r\n    }\r\n\r\n    @Override\r\n    public void setEntry(ScoutEntry entry) {\r\n        this.entry = entry;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        final View view = inflater.inflate(R.layout.fragment_tele_op, container, false);\r\n\r\n        /*cargoShipHatches = view.findViewById(R.id.cargo_ship_hatches_teleop);\r\n        rocketLevelOneHatches = view.findViewById(R.id.rocket_level_one_hatches_teleop);\r\n        rocketLevelOneCargo = view.findViewById(R.id.rocket_level_one_cargo_teleop);\r\n        rocketLevelTwoHatches = view.findViewById(R.id.rocket_level_two_hatches_teleop);\r\n        rocketLevelTwoCargo = view.findViewById(R.id.rocket_level_two_cargo_teleop);\r\n        rocketLevelThreeHatches = view.findViewById(R.id.rocket_level_three_hatches_teleop);\r\n        rocketLevelThreeCargo = view.findViewById(R.id.rocket_level_three_cargo_teleop);\r\n\r\n        assistingClimbTeamNum = view.findViewById(R.id.team_number_text_input);\r\n        climbAssistedByPartners =\r\n                view.findViewById(R.id.climb_assisted_by_alliance_partner_checkbox);*/\r\n        HumanCargoScored = view.findViewById(R.id.Human_Cargo_Scored);\r\n        HumanCargoMissed = view.findViewById(R.id.Human_Cargo_Missed);\r\n        attemptRungClimb = view.findViewById(R.id.attempt_rung_climb);\r\n        successRungClimb = view.findViewById(R.id.success_rung_climb);\r\n        //cargoShipCargo = view.findViewById(R.id.cargo_ship_cargo_teleop);\r\n        RobotCargoScoredUpperHub = view.findViewById(R.id.Robot_Cargo_scored_upperHub);\r\n        RobotCargoPickedUp = view.findViewById(R.id.Robot_cargo_pick_up);\r\n        RobotCargoScoredLowerHub = view.findViewById(R.id.Robot_cargo_scored_lowerHub);\r\n        RobotCargoDropped = view.findViewById(R.id.Robot_Cargo_dropped);\r\n        Button continueButton = view.findViewById(R.id.tele_continue);\r\n        //attemptHabClimbLevelGroup = view.findViewById(R.id.attempt_hab_climb_level);\r\n        successRungClimbLevelGroup = view.findViewById(R.id.success_rung_climb_level);\r\n        /*highestAssistedClimbLevelGroup = view.findViewById(R.id.highest_climb_assist_radio_group);\r\n        climbAssistStartingLevelGroup = view.findViewById(R.id.climb_assist_starting_level_group);\r\n\r\n        attemptHabClimbLevel = new RadioButton[3];\r\n        attemptHabClimbLevel[0] = view.findViewById(R.id.attempt_hab_level_1);\r\n        attemptHabClimbLevel[1] = view.findViewById(R.id.attempt_hab_level_2);\r\n        attemptHabClimbLevel[2] = view.findViewById(R.id.attempt_hab_level_3);*/\r\n\r\n        successRungClimbLevel = new RadioButton[4];\r\n        successRungClimbLevel[0] = view.findViewById(R.id.Low_Rung);\r\n        successRungClimbLevel[1] = view.findViewById(R.id.Mid_Rung);\r\n        successRungClimbLevel[2] = view.findViewById(R.id.High_Rung);\r\n        successRungClimbLevel[3] = view.findViewById(R.id.Traversal_Rung);\r\n\r\n       /* highestAssistedClimbLevel = new RadioButton[2];\r\n        highestAssistedClimbLevel[0] = view.findViewById(R.id.highest_assisted_climb_one);\r\n        highestAssistedClimbLevel[1] = view.findViewById(R.id.highest_assisted_climb_two);\r\n\r\n        climbAssistStartingLevel = new RadioButton[3];\r\n        climbAssistStartingLevel[0] = view.findViewById(R.id.climb_assist_starting_zero);\r\n        climbAssistStartingLevel[1] = view.findViewById(R.id.climb_assist_starting_one);\r\n        climbAssistStartingLevel[2] = view.findViewById(R.id.climb_assist_starting_two);*/\r\n\r\n\r\n        /*for (RadioButton anAttemptHabClimbLevel : attemptHabClimbLevel) {\r\n            anAttemptHabClimbLevel.setOnClickListener(view1 -> autoDisableSuccessGroup());\r\n        }\r\n\r\n        for (RadioButton button : highestAssistedClimbLevel) {\r\n            button.setOnClickListener((view1 -> {\r\n                autoDisableClimbAssistStartingLevelGroup();\r\n            }));\r\n        }*/\r\n\r\n        successRungClimb.setOnCheckedChangeListener((compoundButton, b) -> {\r\n\r\n            if (b) {\r\n               for(RadioButton button : successRungClimbLevel) {\r\n                   button.setEnabled(true);\r\n                   attemptRungClimb.setChecked(true);\r\n                   attemptRungClimb.setEnabled(false);\r\n               }\r\n            } else {\r\n                for(RadioButton button : successRungClimbLevel) {\r\n                    button.setEnabled(false);\r\n                    button.setChecked(false);\r\n                    attemptRungClimb.setChecked(false);\r\n                    attemptRungClimb.setEnabled(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        for(RadioButton button:successRungClimbLevel) {\r\n            button.setOnClickListener((view1 -> {\r\n                for (RadioButton bttn : successRungClimbLevel){\r\n                    if (bttn == button) {\r\n                        bttn.setChecked(true);\r\n                    }\r\n\r\n                    else {\r\n                        bttn.setChecked(false);\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n\r\n\r\n        attemptRungClimb.setOnCheckedChangeListener((compoundButton, b) -> {\r\n            if (b) {\r\n                successRungClimb.setEnabled(true);\r\n                //UiHelper.radioButtonEnable(attemptHabClimbLevelGroup, true);\r\n            } else {\r\n                successRungClimb.setEnabled(false);\r\n                successRungClimb.setChecked(false);\r\n                //UiHelper.radioButtonEnable(attemptHabClimbLevelGroup, false);\r\n                UiHelper.radioButtonEnable(successRungClimbLevelGroup, false);\r\n            }\r\n        });\r\n\r\n\r\n        /*climbAssistedByPartners.setOnCheckedChangeListener((compoundButton, b) -> {\r\n            if (b) {\r\n                assistingClimbTeamNum.setEnabled(true);\r\n            } else {\r\n                assistingClimbTeamNum.setEnabled(false);\r\n                assistingClimbTeamNum.setText(\"\");\r\n            }\r\n        });*/\r\n\r\n\r\n        HumanCargoScored.decButton.setOnClickListener(view1 -> {\r\n            HumanCargoScored.decrement();\r\n           /* if (HumanCargoScored.getValue() == 0) {\r\n                UiHelper.radioButtonEnable(highestAssistedClimbLevelGroup, false);\r\n                UiHelper.radioButtonEnable(climbAssistStartingLevelGroup, false);\r\n            }*/\r\n        });\r\n\r\n        HumanCargoScored.incButton.setOnClickListener(view1 -> {\r\n            HumanCargoScored.increment();\r\n            /*if (HumanCargoScored.getValue() > 0) {\r\n                UiHelper.radioButtonEnable(highestAssistedClimbLevelGroup, true);\r\n                UiHelper.radioButtonEnable(climbAssistStartingLevelGroup, true);\r\n            }*/\r\n        });\r\n\r\n        autoPopulate();\r\n\r\n        continueButton.setOnClickListener(view1 -> {\r\n            hideKeyboard(getActivity());\r\n\r\n            boolean proceed = true;\r\n\r\n            /*if (climbAssistedByPartners.isChecked()) {\r\n                if (assistingClimbTeamNum.getText().toString().isEmpty()) {\r\n                    assistingClimbTeamNum.setError(\"Enter the assisting team's number\");\r\n                    proceed = false;\r\n\r\n                } else {\r\n                    int inputTeamNum =\r\n                            Integer.parseInt(assistingClimbTeamNum.getText().toString());\r\n                    if (inputTeamNum <= 0 || inputTeamNum > 9999) {\r\n                        assistingClimbTeamNum.setError(\"Enter a valid team number\");\r\n                        proceed = false;\r\n                    }\r\n                }\r\n\r\n\r\n            }*/\r\n\r\n            /*if (proceed && HumanCargoScored.getValue() >= 1 &&\r\n                    !(UiHelper.checkIfButtonIsChecked(highestAssistedClimbLevel) && UiHelper.checkIfButtonIsChecked(climbAssistStartingLevel))\r\n                    || attemptRungClimb.isChecked() && !UiHelper.checkIfButtonIsChecked(attemptHabClimbLevel) || successRungClimb.isChecked()\r\n                    && !UiHelper.checkIfButtonIsChecked(successRungClimbLevel)) {\r\n\r\n                proceed = false;\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Please fill in any empty HAB climb fields\")\r\n                        .setCancelable(false)\r\n                        .setPositiveButton(\"OK\", (dialog, id) -> {\r\n                        });\r\n                AlertDialog alert = builder.create();\r\n                alert.show();\r\n            }*/\r\n\r\n            if (proceed) {\r\n                saveState();\r\n                getFragmentManager()\r\n                        .beginTransaction()\r\n                        .replace(android.R.id.content, PostMatchFragment.getInstance(entry), \"POST\")\r\n                        .commit();\r\n            }\r\n        });\r\n\r\n        if (entry.getPreMatch().isRobotNoShow()) {\r\n            continueButton.callOnClick();\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    /*private void autoDisableClimbAssistStartingLevelGroup() {\r\n        if (highestAssistedClimbLevel[0].isChecked()) {\r\n            if (climbAssistStartingLevel[2].isChecked()) {\r\n                climbAssistStartingLevelGroup.clearCheck();\r\n\r\n            }\r\n            climbAssistStartingLevel[2].setEnabled(false);\r\n        } else if (HumanCargoScored.getValue() > 0) {\r\n            climbAssistStartingLevel[2].setEnabled(true);\r\n        }\r\n\r\n    }*/\r\n\r\n    @Override\r\n    public void autoPopulate() {\r\n        if (entry.getTeleOp() != null) {\r\n            TeleOp tele = entry.getTeleOp();\r\n\r\n            RobotCargoPickedUp.setValue(tele.getRobotCargoPickedUp());\r\n            RobotCargoScoredUpperHub.setValue(tele.getRobotCargoScoredUpperHub());\r\n            RobotCargoScoredLowerHub.setValue(tele.getRobotCargoScoredLowerHub());\r\n            RobotCargoDropped.setValue(tele.getRobotCargoDropped());\r\n            HumanCargoScored.setValue(tele.getHumanCargoScored());\r\n            HumanCargoMissed.setValue(tele.getHumanCargoMissed());\r\n\r\n            attemptRungClimb.setChecked(tele.isAttemptRungClimb());\r\n            successRungClimb.setChecked(tele.isSuccessRungClimb());\r\n\r\n            /*cargoShipHatches.setValue(tele.getCargoShipHatches());\r\n            cargoShipCargo.setValue(tele.getCargoShipCargo());\r\n            rocketLevelOneCargo.setValue(tele.getRocketLevelOneCargo());\r\n            rocketLevelOneHatches.setValue(tele.getRocketLevelOneHatches());\r\n            rocketLevelTwoCargo.setValue(tele.getRocketLevelTwoCargo());\r\n            rocketLevelTwoHatches.setValue(tele.getRocketLevelTwoHatches());\r\n            rocketLevelThreeCargo.setValue(tele.getRocketLevelThreeCargo());\r\n            rocketLevelThreeHatches.setValue(tele.getRocketLevelThreeHatches());\r\n\r\n            climbAssistedByPartners.setChecked(tele.isClimbAssistedByPartner());\r\n            HumanCargoScored.setValue(tele.getNumPartnerClimbAssists());\r\n            RobotCargoScoredUpperHub.setValue(tele.getHatchesDropped());\r\n            RobotCargoPickedUp.setValue(tele.getCargoDropped());\r\n            attemptRungClimb.setChecked(tele.isAttemptHabClimb());\r\n            successRungClimb.setChecked(tele.isSuccessHabClimb());*/\r\n\r\n            /*if (tele.getAssistingClimbTeamNum() != 0) {\r\n                assistingClimbTeamNum.setText(Integer.toString(tele.getAssistingClimbTeamNum()));\r\n            }\r\n\r\n            for (int i = 2; i <= 3; i++) {\r\n                if (i == tele.getPartnerClimbAssistEndLevel()) {\r\n                    highestAssistedClimbLevel[i - 2].setChecked(true);\r\n                }\r\n            }\r\n\r\n            for (int i = 0; i < 3; i++) {\r\n                if (i == tele.getPartnerClimbAssistStartLevel()) {\r\n                    climbAssistStartingLevel[i].setChecked(true);\r\n                }\r\n            }*/\r\n\r\n            for (int i = 1; i <= successRungClimbLevel.length; i++) {\r\n                if (i == tele.getSuccessRungClimbLevel()) {\r\n                    successRungClimbLevel[i - 1].setChecked(true);\r\n                }\r\n            }\r\n\r\n            /*for (int i = 1; i <= attemptHabClimbLevel.length; i++) {\r\n                if (i == tele.getAttemptHabClimbLevel()) {\r\n                    attemptHabClimbLevel[i - 1].setChecked(true);\r\n                }\r\n            }*/\r\n\r\n            if (HumanCargoScored.getValue() >= 1) {\r\n               // UiHelper.radioButtonEnable(highestAssistedClimbLevelGroup, true);\r\n                //UiHelper.radioButtonEnable(climbAssistStartingLevelGroup, true);\r\n            }\r\n\r\n            //autoDisableClimbAssistStartingLevelGroup();\r\n\r\n            autoDisableSuccessGroup();\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void saveState() {\r\n\r\n        entry.setTeleOp(new TeleOp(RobotCargoPickedUp.getValue(), RobotCargoScoredUpperHub.getValue() ,\r\n                RobotCargoScoredLowerHub.getValue() , RobotCargoDropped.getValue() , HumanCargoScored.getValue() ,\r\n                HumanCargoMissed.getValue() , UiHelper.getHabLevelSelected(successRungClimbLevel) ,\r\n                attemptRungClimb.isChecked() , successRungClimb.isChecked()));\r\n\r\n\r\n    }\r\n\r\n    private void autoDisableSuccessGroup() {\r\n        int attemptLevel = -1;\r\n        /*for (int i = 0; i < attemptHabClimbLevel.length; i++) {\r\n            if (attemptHabClimbLevel[i].isChecked()) {\r\n                attemptLevel = i;\r\n            }\r\n\r\n        }*/\r\n        if (successRungClimb.isChecked()) {\r\n            for (int j = 0; j < successRungClimbLevel.length; j++) {\r\n                if (j > attemptLevel) {\r\n                    successRungClimbLevel[j].setEnabled(false);\r\n                    if (successRungClimbLevel[j].isChecked()) {\r\n                        successRungClimbLevelGroup.clearCheck();\r\n                    }\r\n                } else {\r\n                    successRungClimbLevel[j].setEnabled(true);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        getActivity().setTitle(\"Add Entry - Tele-Op\");\r\n        hideKeyboard(getActivity());\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/dataentry/TeleOpFragment.java b/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/dataentry/TeleOpFragment.java
--- a/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/dataentry/TeleOpFragment.java	
+++ b/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/dataentry/TeleOpFragment.java	
@@ -44,6 +44,8 @@
     //private EditText assistingClimbTeamNum;
 
 
+
+
     public static TeleOpFragment getInstance(ScoutEntry entry) {
         TeleOpFragment tof = new TeleOpFragment();
         tof.setEntry(entry);
Index: scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/UiHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.usfirst.frc.team25.scouting.ui;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\n\r\nimport org.usfirst.frc.team25.scouting.R;\r\n\r\nimport java.util.HashMap;\r\n\r\npublic class UiHelper {\r\n\r\n    public static void hideKeyboard(Activity activity) {\r\n        try {\r\n            InputMethodManager inputManager =\r\n                    (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            inputManager.hideSoftInputFromWindow(activity.getCurrentFocus().getWindowToken()\r\n                    , InputMethodManager.HIDE_NOT_ALWAYS);\r\n        } catch (NullPointerException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * A method that receives a RadioButton array and returns an integer corresponding to the hab\r\n     * level selected\r\n     *\r\n     * @param habLevelArray Provide a RadioButtonGroup with three hab level options\r\n     * @return integer Returns integer value corresponding to hab levels 1,2, and 3\r\n     */\r\n    public static int getHabLevelSelected(RadioButton[] habLevelArray) {\r\n        for (int i = 0; i < habLevelArray.length; i++) {\r\n            if (habLevelArray[i].isChecked()) {\r\n                return i + 1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public static int getHabLevelSelected(RadioButton[] habLevelArray, int shiftIndex) {\r\n        for (int i = 0; i < habLevelArray.length; i++) {\r\n            if (habLevelArray[i].isChecked()) {\r\n                return i + shiftIndex;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public static int getIntegerFromTextBox(EditText numberEditText) {\r\n        if (numberEditText.getText().toString().isEmpty()) {\r\n            return 0;\r\n        } else {\r\n            return Integer.parseInt(numberEditText.getText().toString());\r\n        }\r\n    }\r\n\r\n\r\n    public static void radioButtonEnable(RadioGroup groupToEnableOrDisable, boolean modeSelected) {\r\n        if (modeSelected) {\r\n            for (int i = 0; i < groupToEnableOrDisable.getChildCount(); i++) {\r\n                groupToEnableOrDisable.getChildAt(i).setEnabled(true);\r\n            }\r\n        } else {\r\n            for (int i = 0; i < groupToEnableOrDisable.getChildCount(); i++) {\r\n                groupToEnableOrDisable.getChildAt(i).setEnabled(false);\r\n            }\r\n\r\n            groupToEnableOrDisable.clearCheck();\r\n        }\r\n    }\r\n\r\n    public static boolean checkIfButtonIsChecked(RadioButton[] groupToCheck) {\r\n        for (RadioButton button : groupToCheck) {\r\n            if (button.isChecked()) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void autoSetTheme(Activity activity, int teamNum) {\r\n        HashMap<Integer, Integer> teamNumThemePairs = new HashMap<>();\r\n\r\n        int selectedTheme;\r\n\r\n        teamNumThemePairs.put(2590, R.style.AppTheme_NoLauncher_Red);\r\n        teamNumThemePairs.put(225, R.style.AppTheme_NoLauncher_Red);\r\n        teamNumThemePairs.put(303, R.style.AppTheme_NoLauncher_Green);\r\n        teamNumThemePairs.put(25, R.style.AppTheme_NoLauncher_Raider);\r\n        teamNumThemePairs.put(1923, R.style.AppTheme_NoLauncher_Black);\r\n\r\n        if (!teamNumThemePairs.containsKey(teamNum)) {\r\n            selectedTheme = R.style.AppTheme_NoLauncher_Blue;\r\n        } else {\r\n            selectedTheme = teamNumThemePairs.get(teamNum);\r\n        }\r\n\r\n        activity.setTheme(selectedTheme);\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/UiHelper.java b/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/UiHelper.java
--- a/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/UiHelper.java	
+++ b/scoutingapp/src/main/java/org/usfirst/frc/team25/scouting/ui/UiHelper.java	
@@ -101,5 +101,9 @@
         activity.setTheme(selectedTheme);
 
     }
+
+
+
+
 }
 
